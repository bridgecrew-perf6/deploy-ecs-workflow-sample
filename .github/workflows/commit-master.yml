name: "commit-master"

on:
  push:
    branches: 
    - 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out 
      uses: actions/checkout@v2

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    # 完成java项目打包
    - name: build maven project
      run: mvn clean -U package -Dmaven.test.skip 

    # 上传当前版本到OBS中归档，需要提前准备OBS的AK/SK,并在github项目添加HUAWEI_AK和HUAWEI_SK两个secrets
    - name: install obs and upload war/jar to obs
      run: |
        wget https://obs-community.obs.cn-north-1.myhuaweicloud.com/obsutil/current/obsutil_linux_amd64.tar.gz
        tar -zxf obsutil_linux_amd64.tar.gz
        mv obsutil_linux_amd64_5.3.4 obsutil
        chmod -R 755 obsutil/*
        obsutil/obsutil version
        obsutil/obsutil config -i=${{ secrets.HUAWEI_AK }} -k=${{ secrets.HUAWEI_SK }} -e=obs.cn-north-4.myhuaweicloud.com
        obsutil/obsutil ls -s
        obsutil/obsutil cp target/demoapp.jar obs://huaweihdnbucket/workflow/springboot-web/v1.0.0.1/
        obsutil/obsutil ls -s obs://huaweihdnbucket/workflow/springboot-web/v1.0.0.1/

    # 安装sshpass
    - name: install sshpass
      run: sudo apt-get -y update && sudo apt-get install -y sshpass

    # 检查并安装jdk,当前demo需要安装jdk1.8,高版本可能不兼容
    - name: install sshpass
      run: sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "yum install -y java-1.8.0-openjdk  java-1.8.0-openjdk-devel"

    # 停止服务,初次部署可以跳过
    - name: stop service
      run: |
         sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "systemctl stop demoapp.service"

    # 备份老版本,初次部署可以跳过
    - name: backup old service
      run: |
        currentDate=`date +%Y-%m-%d-%H-%M-%S`
        sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "mkdir -p /opt/backup/demoapp/\$currentDate/"
        sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "mv /usr/local/demoapp.jar /opt/backup/demoapp/\$currentDate/"

    # 部署服务 部署jar包，并添加到systemctl 服务器中，方便启停
    - name: deploy springweb jar to remote server
      run: |
        sshpass -p ${{ secrets.CCE_PASSWORD }}  scp  -o StrictHostKeyChecking=no  target/demoapp.jar root@182.92.156.203:/usr/local/
        sshpass -p ${{ secrets.CCE_PASSWORD }}  scp  -o StrictHostKeyChecking=no  bin/demoapp.service root@182.92.156.203:/etc/systemd/system/
        sshpass -p ${{ secrets.CCE_PASSWORD }}  scp  -o StrictHostKeyChecking=no  bin/start-demoapp.sh root@182.92.156.203:/usr/local/
        sshpass -p ${{ secrets.CCE_PASSWORD }}  scp  -o StrictHostKeyChecking=no  bin/stop-demoapp.sh root@182.92.156.203:/usr/local/
        sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "chmod 755 /usr/local/start-demoapp.sh && chmod 755 /usr/local/stop-demoapp.sh"
        sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "systemctl daemon-reload"

    
    # 启动服务 sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "java -jar /usr/local/demoapp.jar"
    - name: start spring-web application
      run: |
        sshpass -p ${{ secrets.CCE_PASSWORD }}  ssh -o StrictHostKeyChecking=no root@182.92.156.203 "systemctl start demoapp.service"
        
 
    # 检测前端页面和后端接口是否都能正常访问
    - name: check web app status
      run: |
        sleep 30
        curl -kv http://182.92.156.203:8080/
        curl -kv http://localhost:8080/test